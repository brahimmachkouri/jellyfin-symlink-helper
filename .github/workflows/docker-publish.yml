name: Build, Tag, and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set_version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Fetch tags
        run: git fetch --tags

      - name: Calculate version
        id: set_version
        run: |
          # Get latest tag, default to v0.0.0 if none exist
          #latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          latest_tag="v0.0.14"
          version_number=$(echo "$latest_tag" | sed 's/^v//')

          # Increment patch version - has been fixed
          new_version=$(echo "$version_number" | awk -F. -v OFS=. '{$NF++; print}')
          echo "version=$new_version" >> $GITHUB_OUTPUT

  docker:
    runs-on: ubuntu-latest
    needs: version
    permissions:
      contents: write  # Required to push tags
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Echo version
        run: echo "VERSION=${{ needs.version.outputs.version }}"

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/jellyfin-symlink-helper:latest
            ${{ secrets.DOCKER_USERNAME }}/jellyfin-symlink-helper:v${{ needs.version.outputs.version }}

      - name: Create Git tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git tag -a v${{ needs.version.outputs.version }} -m "Release v${{ needs.version.outputs.version }}"
          git push origin v${{ needs.version.outputs.version }}
